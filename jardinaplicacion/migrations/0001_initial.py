# Generated by Django 5.2.1 on 2025-05-27 22:17

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CicloLectivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inicio', models.DateField()),
                ('finalizacion', models.DateField()),
            ],
            options={
                'ordering': ['-inicio'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dni', models.CharField(max_length=10, unique=True)),
                ('telefono', models.CharField(blank=True, max_length=15)),
                ('direccion', models.TextField(blank=True)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('es_maestro', models.BooleanField(default=False)),
                ('es_directivo', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ConfiguracionSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registro_asistencia_habilitado', models.BooleanField(default=True, help_text='Permite a los maestros registrar su entrada y salida')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('actualizado_por', models.ForeignKey(limit_choices_to={'es_directivo': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='configuraciones_actualizadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuración del Sistema',
                'verbose_name_plural': 'Configuraciones del Sistema',
            },
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('cupo_habilitado', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('turno', models.CharField(choices=[('mañana', 'Mañana'), ('tarde', 'Tarde')], max_length=10)),
                ('horario', models.CharField(max_length=100)),
                ('edad_sala', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(5)])),
                ('ciclo_lectivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cursos', to='jardinaplicacion.ciclolectivo')),
                ('maestros', models.ManyToManyField(blank=True, limit_choices_to={'es_maestro': True}, related_name='cursos_asignados', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CuotaCurso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('año', models.PositiveIntegerField()),
                ('monto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cuotas', to='jardinaplicacion.curso')),
            ],
            options={
                'unique_together': {('curso', 'mes', 'año')},
            },
        ),
        migrations.CreateModel(
            name='Alumno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('dni', models.CharField(max_length=10, unique=True)),
                ('fecha_nacimiento', models.DateField()),
                ('curso', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alumnos', to='jardinaplicacion.curso')),
            ],
        ),
        migrations.CreateModel(
            name='Familiar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('dni', models.CharField(max_length=10)),
                ('telefono', models.CharField(max_length=15)),
                ('direccion', models.TextField(blank=True)),
                ('mail', models.EmailField(blank=True, max_length=254)),
                ('relacion_con_alumno', models.CharField(choices=[('padre', 'Padre'), ('madre', 'Madre'), ('abuelo', 'Abuelo'), ('abuela', 'Abuela'), ('ti@', 'Ti@'), ('herman@', 'herman@'), ('otro', 'Otro')], max_length=10)),
                ('alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='familiares', to='jardinaplicacion.alumno')),
            ],
        ),
        migrations.CreateModel(
            name='RegistroRetiroAlumno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(default=django.utils.timezone.now)),
                ('hora_retiro', models.TimeField(default=django.utils.timezone.now)),
                ('alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registros_retiro', to='jardinaplicacion.alumno')),
                ('familiar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retiros_realizados', to='jardinaplicacion.familiar')),
                ('maestro', models.ForeignKey(limit_choices_to={'es_maestro': True}, on_delete=django.db.models.deletion.CASCADE, related_name='retiros_registrados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-fecha', '-hora_retiro'],
            },
        ),
        migrations.CreateModel(
            name='PagoCuota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_pago', models.DateField(default=django.utils.timezone.now)),
                ('monto_pagado', models.DecimalField(decimal_places=2, max_digits=10)),
                ('alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagos', to='jardinaplicacion.alumno')),
                ('cuota', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagos', to='jardinaplicacion.cuotacurso')),
                ('familiar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagos_realizados', to='jardinaplicacion.familiar')),
            ],
            options={
                'unique_together': {('alumno', 'cuota')},
            },
        ),
        migrations.CreateModel(
            name='RegistroAsistenciaMaestro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(default=django.utils.timezone.now)),
                ('hora_ingreso', models.TimeField()),
                ('hora_salida', models.TimeField(blank=True, null=True)),
                ('maestro', models.ForeignKey(limit_choices_to={'es_maestro': True}, on_delete=django.db.models.deletion.CASCADE, related_name='registros_asistencia', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-fecha', '-hora_ingreso'],
                'unique_together': {('maestro', 'fecha')},
            },
        ),
    ]
